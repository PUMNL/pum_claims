<?php

function pum_claims_menu() {
    $items = array();
    $items['portal/new-claim'] = array(
        'title' => 'Submit a new claim',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('pum_claims_form'),
        'access callback' => 'pum_claims_user_has_role',
        'access arguments' => array(array('Expert', 'Sector Coordinator', 'Country Coordinator', 'Prof', 'Representative')),
    );
    $items['portal/edit-claim/%'] = array(
        'title' => 'Submit a new claim',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('pum_claims_edit_form', 2),
        'access callback' => 'pum_claims_user_has_role',
        'access arguments' => array(array('Expert', 'Sector Coordinator', 'Country Coordinator', 'Prof', 'Representative')),
    );
    $items['portal/edit-claim/%/add-line'] = array(
        'title' => 'Submit a new claim line',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('pum_claims_line_form', 2),
        'access callback' => 'pum_claims_user_has_role',
        'access arguments' => array(array('Expert', 'Sector Coordinator', 'Country Coordinator', 'Prof', 'Representative')),
    );
    return $items;
}

function pum_claims_views_api() {
    return array('api' => 3.0);
}

function pum_claims_views_default_views() {
    $files = file_scan_directory(drupal_get_path('module', 'pum_claims'). '/views', '/.inc/');
    $views = array();
    civicrm_initialize();
    foreach ($files as $filepath => $file) {
        require $filepath;
        if (isset($view)) {
            $views[$view->name] = $view;
        }
    }
    return $views;
}

function pum_claims_form($form, &$form_state) {
    global $user;
    civicrm_initialize();
    $contact_id = civicrm_api3('UFMatch', 'getvalue', array(
        'uf_id' => $user->uid,
        'return' => 'contact_id'
    ));
    $contact = civicrm_api3('Contact', 'getsingle', array('id' => $contact_id));
    $bankDetails = _pum_claims_getBankDetailsOfContact($contact_id);

    $strBirthDate = '';
    if (!empty($contact['birth_date'])) {
        $dateBirthDate = new DateTime($contact['birth_date']);
        $strBirthDate = $dateBirthDate->format('Y-m-d');
    }

    $claim_types = _pum_claims_getClaimTypes();
    $link_options = _pum_claims_getClaimLinksForContact($contact_id);

    $form['about_me']['#type'] = 'fieldset';
    $form['about_me']['name']['#markup'] = '<p><strong>Name: </strong>'.$contact['display_name'].'</p>';
    $form['about_me']['birthdate']['#markup'] = '<p><strong>Birth date:</strong> '.$strBirthDate.'</p>';
    $form['about_me']['bank_name']['#type'] = 'textfield';
    $form['about_me']['bank_name']['#title'] = 'Bank name';
    $form['about_me']['bank_name']['#required'] = true;
    $form['about_me']['bank_name']['#default_value'] = $bankDetails['bank'];
    $form['about_me']['bic']['#type'] = 'textfield';
    $form['about_me']['bic']['#title'] = 'BIC';
    $form['about_me']['bic']['#attributes']['class'][] = 'small';
    $form['about_me']['bic']['#required'] = true;
    $form['about_me']['bic']['#default_value'] = $bankDetails['bic'];
    $form['about_me']['iban']['#type'] = 'textfield';
    $form['about_me']['iban']['#title'] = 'IBAN';
    $form['about_me']['iban']['#required'] = true;
    $form['about_me']['iban']['#default_value'] = $bankDetails['iban'];
    $form['about_me']['type']['#type'] = 'select';
    $form['about_me']['type']['#title'] = 'Claim type';
    $form['about_me']['type']['#required'] = true;
    $form['about_me']['type']['#options'] = $claim_types;
    $form['about_me']['link']['#type'] = 'select';
    $form['about_me']['link']['#title'] = 'Link';
    $form['about_me']['link']['#required'] = true;
    $form['about_me']['link']['#options'] = $link_options;
    $form['about_me']['description']['#type'] = 'textfield';
    $form['about_me']['description']['#title'] = 'Description';
    $form['about_me']['description']['#required'] = true;

    $form['submit_button'] = array(
        '#type' => 'submit',
        '#value' => t('Save and continue'),
    );


    return $form;
}

function pum_claims_form_submit($form, &$form_state) {
    global $user;
    civicrm_initialize();
    $contact_id = civicrm_api3('UFMatch', 'getvalue', array(
        'uf_id' => $user->uid,
        'return' => 'contact_id'
    ));
    $contact = civicrm_api3('Contact', 'getsingle', array('id' => $contact_id));

    _pum_claims_updateBankDetailsOfContact($contact_id, $form_state['values']['bank_name'], $form_state['values']['iban'], $form_state['values']['bic']);

    $expenseDate = new DateTime();
    $params['expense_date'] = $expenseDate->format("Ymd");
    $params['claim_type'] = $form_state['values']['type'];
    $params['claim_contact_id'] = $contact_id;
    $params['claim_link'] = $form_state['values']['link'];
    $params['claim_total_amount'] = 0;
    $params['description'] = $form_state['values']['description'];
    $result = civicrm_api3('Claim', 'create', $params);
    $claim_id = $result['values']['id'];
    drupal_goto('portal/edit-claim/'.$claim_id);
}

function pum_claims_edit_form($form, &$form_state, $claim_id) {
    global $user;
    civicrm_initialize();
    $contact_id = civicrm_api3('UFMatch', 'getvalue', array(
        'uf_id' => $user->uid,
        'return' => 'contact_id'
    ));

    // @Todo retrievie current attachments
    $attachmentRows = array();
    // @Todo retrieve the linked lineItem.
    $lineitemRows = array();


    $contact = civicrm_api3('Contact', 'getsingle', array('id' => $contact_id));
    $bankDetails = _pum_claims_getBankDetailsOfContact($contact_id);

    $strBirthDate = '';
    if (!empty($contact['birth_date'])) {
        $dateBirthDate = new DateTime($contact['birth_date']);
        $strBirthDate = $dateBirthDate->format('Y-m-d');
    }

    $claim_types = _pum_claims_getClaimTypes();
    $link_options = _pum_claims_getClaimLinksForContact($contact_id);

    $form['claim_id']['#type'] = 'hidden';
    $form['claim_id']['#value'] = $claim_id;

    $form['about_me']['#type'] = 'fieldset';
    $form['about_me']['name']['#markup'] = '<p><strong>Name: </strong>'.$contact['display_name'].'</p>';
    $form['about_me']['birthdate']['#markup'] = '<p><strong>Birth date:</strong> '.$strBirthDate.'</p>';
    $form['about_me']['bank_name']['#type'] = 'textfield';
    $form['about_me']['bank_name']['#title'] = 'Bank name';
    $form['about_me']['bank_name']['#required'] = true;
    $form['about_me']['bank_name']['#default_value'] = $bankDetails['bank'];
    $form['about_me']['bic']['#type'] = 'textfield';
    $form['about_me']['bic']['#title'] = 'BIC';
    $form['about_me']['bic']['#attributes']['class'][] = 'small';
    $form['about_me']['bic']['#required'] = true;
    $form['about_me']['bic']['#default_value'] = $bankDetails['bic'];
    $form['about_me']['iban']['#type'] = 'textfield';
    $form['about_me']['iban']['#title'] = 'IBAN';
    $form['about_me']['iban']['#required'] = true;
    $form['about_me']['iban']['#default_value'] = $bankDetails['iban'];
    $form['about_me']['type']['#type'] = 'select';
    $form['about_me']['type']['#title'] = 'Claim type';
    $form['about_me']['type']['#required'] = true;
    $form['about_me']['type']['#options'] = $claim_types;
    $form['about_me']['link']['#type'] = 'select';
    $form['about_me']['link']['#title'] = 'Link';
    $form['about_me']['link']['#required'] = true;
    $form['about_me']['link']['#options'] = $link_options;
    $form['about_me']['description']['#type'] = 'textfield';
    $form['about_me']['description']['#title'] = 'Description';
    $form['about_me']['description']['#required'] = true;

    $form['lines']['#type'] = 'fieldset';
    $form['lines']['#title'] = 'My expenses';
    $form['lines']['new-line']['#type'] = 'markup';
    $form['lines']['new-line']['#markup'] = '<p><a href="/portal/edit-claim/'.$claim_id.'/add-line" class="button">Add expense line</a></p>';

    $form['attachments']['#type'] = 'fieldset';
    $form['attachments']['#title'] = 'My attachments (invoices, train tickets etc.)';
    $form['attachments']['upload']['#prefix'] = '<div class="upload">';
    $form['attachments']['upload']['#suffix'] = '</div>';
    $form['attachments']['upload']['explanation']['#markup'] = '<p class="description">Please upload one or more attachments</p>';
    $form['attachments']['upload']['file']['#title'] = t('File');
    $form['attachments']['upload']['file']['#type'] = 'file';
    $form['attachments']['upload']['button']['#type'] = 'submit';
    $form['attachments']['upload']['button']['#value'] = 'Upload';
    $form['attachments']['upload']['button']['#submit'] = array('pum_claims_form_submit_attachments');

    if (count($attachmentRows)) {
        $form['attachments']['table']['#theme'] = 'table';
        $form['attachments']['table']['#rows'] = $attachmentRows;
        $form['attachments']['table']['#attributes'] = array('width' => '100%');
    }

    $form['submit_button'] = array(
        '#type' => 'submit',
        '#value' => t('Save and submit expense form'),
    );


    return $form;
}

function pum_claims_edit_form_submit($form, &$form_state) {
    global $user;
    civicrm_initialize();
    $contact_id = civicrm_api3('UFMatch', 'getvalue', array(
        'uf_id' => $user->uid,
        'return' => 'contact_id'
    ));
    $contact = civicrm_api3('Contact', 'getsingle', array('id' => $contact_id));

    _pum_claims_updateBankDetailsOfContact($contact_id, $form_state['values']['bank_name'], $form_state['values']['iban'], $form_state['values']['bic']);

    $expenseDate = new DateTime();
    $params['expense_date'] = $expenseDate->format("Ymd");
    $params['claim_type'] = $form_state['values']['type'];
    $params['claim_contact_id'] = $contact_id;
    $params['claim_link'] = $form_state['values']['link'];
    $params['claim_total_amount'] = 0;
    $params['description'] = $form_state['values']['description'];
    $result = civicrm_api3('Claim', 'create', $params);
    $claim_id = $result['values']['id'];
    drupal_goto('portal/edit-claim/'.$claim_id);
}

function pum_claims_line_form($form, &$form_state, $claims_id) {

    // @Todo load types from a predefined list.
    $types = array();

    $form['line']['#type'] = 'fieldset';
    $form['line']['expense_date']['#type'] = 'date';
    $form['line']['expense_date']['#title'] = 'Date expense incurred';

    return $form;
}


/**
 * Check whether a drupal user has a certain role.
 *
 * @param array $roles
 * @return bool
 */
function pum_claims_user_has_role($roles = array())
{
    global $user;
    if (in_array('administrator', $user->roles)) {
        return true;
    }
    foreach ($roles as $role) {
        if (in_array($role, $user->roles)) {
            return TRUE;
        }
    }
    return FALSE;
}

function pum_claims_get_role_ids($roles) {
    $rids = array();
    $available_roles = user_roles();
    foreach($roles as $role) {
        $rid = array_search($role, $available_roles);
        if ($rid !== false) {
            $rids[$rid] = $rid;
        }
    }

    return $rids;
}

function _pum_claims_getClaimTypes() {
    $types = array();

    $result = civicrm_api3('OptionValue', 'get', array('option_group_id' => 'pum_claim_type', 'option.limit' => 0));
    foreach($result['values'] as $value) {
        $types[$value['value']] = $value['label'];
    }
    return $types;
}

/**
 * Find all cases in which the contact has a role.
 * Returns the contact number and a label/description for the case
 *
 * @param int $contact_id
 * @return array
 */
function _pum_claims_getClaimLinksForContact($contact_id) {
   $sql = "SELECT `case`.`id`, `case`.`subject` 
          FROM `civicrm_relationship` `relationship`
          INNER JOIN `civicrm_case` `case` ON `case`.`id` = `relationship`.`case_id`
          WHERE (`relationship`.`contact_id_a` = %1 OR `relationship`.`contact_id_b` = %1) 
          ";
   $params[1] = array($contact_id, 'Integer');
   $dao = CRM_Core_DAO::executeQuery($sql, $params);
   $return = array();
   while($dao->fetch()) {
       $return[$dao->id] = $dao->subject.' (Case: '.$dao->id.')';
   }
   return $return;
}

function _pum_claims_updateBankDetailsOfContact($contact_id, $bank, $iban, $bic) {
    $bankInformationCustomGroup = civicrm_api3('CustomGroup', 'getsingle', array('name' => 'Bank_Information'));
    $bankInformationCustomGroupId = $bankInformationCustomGroup['id'];
    $bankNameCustomFieldId = civicrm_api3('CustomField', 'getvalue', array('name' => 'Bank_Name', 'custom_group_id' => $bankInformationCustomGroupId, 'return' => 'id'));
    $IBANCustomFieldId = civicrm_api3('CustomField', 'getvalue', array('name' => 'IBAN_nummer', 'custom_group_id' => $bankInformationCustomGroupId, 'return' => 'id'));
    $BICCustomFieldId = civicrm_api3('CustomField', 'getvalue', array('name' => 'BIC_Swiftcode', 'custom_group_id' => $bankInformationCustomGroupId, 'return' => 'id'));

    $params['id'] = $contact_id;
    $params['custom_'.$bankNameCustomFieldId] = $bank;
    $params['custom_'.$IBANCustomFieldId] = $iban;
    $params['custom_'.$BICCustomFieldId] = $bic;

    civicrm_api3('Contact', 'create', $params);
}

function _pum_claims_getBankDetailsOfContact($contact_id) {
    $bankInformationCustomGroup = civicrm_api3('CustomGroup', 'getsingle', array('name' => 'Bank_Information'));
    $bankInformationCustomGroupId = $bankInformationCustomGroup['id'];
    $bankNameCustomFieldId = civicrm_api3('CustomField', 'getvalue', array('name' => 'Bank_Name', 'custom_group_id' => $bankInformationCustomGroupId, 'return' => 'id'));
    $IBANCustomFieldId = civicrm_api3('CustomField', 'getvalue', array('name' => 'IBAN_nummer', 'custom_group_id' => $bankInformationCustomGroupId, 'return' => 'id'));
    $BICCustomFieldId = civicrm_api3('CustomField', 'getvalue', array('name' => 'BIC_Swiftcode', 'custom_group_id' => $bankInformationCustomGroupId, 'return' => 'id'));

    $contact = civicrm_api3('Contact', 'getsingle', array(
        'id' => $contact_id,
        'return' => array('custom_'.$bankNameCustomFieldId, 'custom_'.$IBANCustomFieldId, 'custom_'.$BICCustomFieldId),
    ));

    $return['bank'] = '';
    $return['iban'] = '';
    $return['bic'] = '';
    if (isset($contact['custom_'.$bankNameCustomFieldId])) {
        $return['bank'] = $contact['custom_'.$bankNameCustomFieldId];
    }
    if (isset($contact['custom_'.$IBANCustomFieldId])) {
        $return['iban'] = $contact['custom_'.$IBANCustomFieldId];
    }
    if (isset($contact['custom_'.$BICCustomFieldId])) {
        $return['bic'] = $contact['custom_'.$BICCustomFieldId];
    }

    return $return;
}